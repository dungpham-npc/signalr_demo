@page
@model PhamAnhDungRazorPages.Pages.Category.CategoryModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Category Management";
    var token = Antiforgery.GetTokens(HttpContext).RequestToken;
}

<div class="category-container">
    <div class="page-header">
        <h2>Category Management</h2>
        <button class="btn-create" onclick="openCreateModal()">
            <i class="fas fa-plus"></i> New Category
        </button>
    </div>

    <div class="categories-grid">
        @foreach (var category in Model.Categories)
        {
            <div class="category-card" data-id="@category.CategoryId">
                <h3>@category.CategoryName</h3>
                <p>@category.CategoryDescription</p>
                <div class="card-actions">
                    <button class="btn-edit" onclick="openEditModal(@category.CategoryId)">
                        <i class="fas fa-edit"></i> Edit
                    </button>
                    <button class="btn-delete" onclick="openDeleteModal(@category.CategoryId)">
                        <i class="fas fa-trash"></i> Delete
                    </button>
                </div>
            </div>
        }
    </div>
</div>

<!-- Create/Edit Modal -->
<div id="categoryModal" class="modal">
    <div class="modal-content">
        <span class="close-modal" onclick="closeModal('categoryModal')">&times;</span>
        <h3 id="modalTitle">Create Category</h3>
        <form id="categoryForm">
            @Html.AntiForgeryToken()
            <input type="hidden" id="categoryId" value="0" />

            <div class="form-group">
                <label>Category Name</label>
                <input type="text" id="categoryName" name="CategoryName" class="form-control" required />  <!-- ✅ Input field -->
            </div>

            <div class="form-group">
                <label>Description</label>
                <textarea id="categoryDescription" name="CategoryDescription" class="form-control"></textarea>  <!-- ✅ Textarea -->
            </div>

            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" onclick="closeModal('categoryModal')">Cancel</button>
            </div>
        </form>
    </div>
</div>

<!-- Delete Modal -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <span class="close-modal" onclick="closeModal('deleteModal')">&times;</span>
        <h3>Delete Category</h3>
        <p>Are you sure you want to delete this category?</p>
        <input type="hidden" id="deleteCategoryId" />
        <div class="mt-3">
            <button class="btn btn-danger" onclick="deleteCategory()">Delete</button>
            <button class="btn btn-secondary" onclick="closeModal('deleteModal')">Cancel</button>
        </div>
    </div>
</div>

<style>
    .category-container {
        padding: 2rem;
        max-width: 1200px;
        margin: 0 auto;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .categories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .category-card {
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .category-card h3 {
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }

    .category-card p {
        color: #666;
        margin-bottom: 1rem;
        font-size: 0.9rem;
    }

    .card-actions {
        display: flex;
        gap: 0.5rem;
    }

    .btn-create {
        background: #2ecc71;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-edit, .btn-delete {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-edit {
        background: #3498db;
        color: white;
    }

    .btn-delete {
        background: #e74c3c;
        color: white;
    }

    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        z-index: 1000;
    }

    .modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 20px;
        border-radius: 8px;
        width: 50%;
        position: relative;
    }

    .close-modal {
        position: absolute;
        right: 1rem;
        top: 1rem;
        font-size: 1.5rem;
        cursor: pointer;
        color: #666;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function closeModal(modalId) {
        $('#' + modalId).hide();
    }

    function openCreateModal() {
        $('#modalTitle').text('Create Category');
        $('#categoryId').val(0);
        $('#categoryName').val('');
        $('#categoryDescription').val('');
        $('#categoryModal').fadeIn();
    }

    function openEditModal(id) {
        $.ajax({
            url: '?handler=GetCategory',
            type: 'GET',
            data: { id: id },
            success: function(response) {
                console.log("Received category data:", response);

                if (!response || !response.categoryId) {
                    alert("Error: Could not fetch category details.");
                    return;
                }

                $('#categoryId').val(response.categoryId);
                $('#categoryName').val(response.categoryName);
                $('#categoryDescription').val(response.categoryDescription);
                $('#categoryModal').fadeIn();
            },

            error: function(xhr) {
                console.error('Error fetching category:', xhr.responseText);
                alert('Error loading category data');
            }
        });
    }

    function openDeleteModal(id) {
        $('#deleteCategoryId').val(id);
        $('#deleteModal').fadeIn();
    }

    $('#categoryForm').submit(function(e) {
        e.preventDefault();

        const categoryId = parseInt($('#categoryId').val());
        let formData = $(this).serialize() + "&CategoryId=" + categoryId;

        const url = categoryId === 0 ? '?handler=Create' : '?handler=Update';

        $.ajax({
            url: url,
            type: 'POST',
            data: formData,
            dataType: "json",
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(response) {
                if (response.success) {
                    closeModal('categoryModal');
                    window.location.reload();
                } else {
                    let errorMessage = response.message || 'An error occurred';
                    if (response.errors && response.errors.length > 0) {
                        errorMessage += ': ' + response.errors.join(', ');
                    }
                    alert(errorMessage);
                }
            },
            error: function(xhr) {
                console.error('Error saving category:', xhr.responseText);
                alert('Error saving category');
            }
        });
    });

    function deleteCategory() {
        const id = $('#deleteCategoryId').val();

        $.ajax({
            url: '?handler=Delete',
            type: 'POST',
            data: { id: id },
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(response) {
                if (response.success) {
                    closeModal('deleteModal');
                    window.location.reload();
                } else {
                    alert(response.message || 'Cannot delete this category');
                }
            },
            error: function(xhr) {
                console.error('Error deleting category:', xhr.responseText);
                alert('Error deleting category');
            }
        });
    }
</script>